"""add rbac tables

Revision ID: 87e282feabe8
Revises: 
Create Date: 2023-12-16 23:46:25.315942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '87e282feabe8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    directory = op.create_table('directory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('owner', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    capability = op.create_table('capability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dir_id', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['dir_id'], ['directory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    role = op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dir_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dir_id'], ['directory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    user = op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=True),
    sa.Column('password', sqlalchemy_utils.types.password.PasswordType(length=20), nullable=True),
    sa.Column('dir_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dir_id'], ['directory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    role_cap = op.create_table('rolecapability',
    sa.Column('cap_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cap_id'], ['capability.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('cap_id', 'role_id')
    )
    user_role = op.create_table('userrole',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )

    # add the directory 
    op.bulk_insert(directory, [{
        "id": 0,
        "name": "root",
        "description" : "The root directory for root users for this app"
    }])

    op.bulk_insert(capability, [{
        "id" : 0,
        "name" : "create-directory"
        "description": "lets someone create a new directory"
    }, {
        "id": 1,
        "name": "create-user",
        "description": "lets someone add create new users"
    }, {
        "id": 2,
        "name": ""
    }])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userrole')
    op.drop_table('rolecapability')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('capability')
    op.drop_table('directory')
    # ### end Alembic commands ###
